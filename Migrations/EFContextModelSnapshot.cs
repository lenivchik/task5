// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebApplication1.Contexts;

#nullable disable

namespace WebApplication1.Migrations
{
    [DbContext(typeof(EFContext))]
    partial class EFContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WebApplication1.Models.DrillBlock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("DrillBlock");
                });

            modelBuilder.Entity("WebApplication1.Models.DrillBlockPoints", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DrillBlockId")
                        .HasColumnType("integer");

                    b.Property<string>("Sequence")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("X")
                        .HasColumnType("double precision");

                    b.Property<double>("Y")
                        .HasColumnType("double precision");

                    b.Property<double>("Z")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("DrillBlockId")
                        .IsUnique();

                    b.ToTable("DrillBlockPoints");
                });

            modelBuilder.Entity("WebApplication1.Models.Hole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<float>("Depth")
                        .HasColumnType("real");

                    b.Property<int>("DrillBlockId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DrillBlockId");

                    b.ToTable("Hole");
                });

            modelBuilder.Entity("WebApplication1.Models.HolePoints", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("HoleId")
                        .HasColumnType("integer");

                    b.Property<double>("X")
                        .HasColumnType("double precision");

                    b.Property<double>("Y")
                        .HasColumnType("double precision");

                    b.Property<double>("Z")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("HoleId")
                        .IsUnique();

                    b.ToTable("HolePoints");
                });

            modelBuilder.Entity("WebApplication1.Models.DrillBlockPoints", b =>
                {
                    b.HasOne("WebApplication1.Models.DrillBlock", null)
                        .WithOne("DrillBlockPoints")
                        .HasForeignKey("WebApplication1.Models.DrillBlockPoints", "DrillBlockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplication1.Models.Hole", b =>
                {
                    b.HasOne("WebApplication1.Models.DrillBlock", null)
                        .WithMany("Holes")
                        .HasForeignKey("DrillBlockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplication1.Models.HolePoints", b =>
                {
                    b.HasOne("WebApplication1.Models.Hole", null)
                        .WithOne("HolePoints")
                        .HasForeignKey("WebApplication1.Models.HolePoints", "HoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplication1.Models.DrillBlock", b =>
                {
                    b.Navigation("DrillBlockPoints")
                        .IsRequired();

                    b.Navigation("Holes");
                });

            modelBuilder.Entity("WebApplication1.Models.Hole", b =>
                {
                    b.Navigation("HolePoints")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
